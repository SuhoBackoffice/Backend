plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'baekgwa'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starter
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Data Source
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Flyway - DB Migration
    implementation 'org.flywaydb:flyway-mysql:11.5.0'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // Template Engine
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // SpringDoc
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Querydsl
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // TSID
    implementation("io.hypersistence:hypersistence-utils-hibernate-63:3.10.3")

    // Poi
    implementation("org.apache.poi:poi:5.4.0")
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl generated directory setting - start
def generatedDir = "src/main/generated"

sourceSets {
    main.java.srcDirs += generatedDir
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file(generatedDir)
}

clean {
    doFirst {
        delete file(generatedDir)
    }
}
// Querydsl generated directory setting - end